/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Reproductor5.java
 *
 * Created on 09-may-2011, 17:55:18
 */
package edu.ub.prog2.MarinVegaJuan.vista;

import edu.ub.prog2.MarinVegaJuan.controlador.CtrlReproductor;
import edu.ub.prog2.MarinVegaJuan.model.FitxerAudio;
import edu.ub.prog2.MarinVegaJuan.model.LlistaReproduccio;
import java.awt.event.ActionEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Clase reproductor que comunicara amb les clases seguents
 * BridgeReproductor5  que comunicara amb le clase CtrlReproductor al paquet QuitaquisTamayDennis.controlador
 * BridgeFitxerAudio que comunicara amb la clase FitxerAudio al paquet QuitaquisTamayDennis.controlador
 * BridgeLlistaReproduccio que comunicara amb la clase LlistaReproduccio al paquet QuitaquisTamayDennis.controlador
 * 
 * @author Juan Marin
 */
public class Reproductor5 extends javax.swing.JFrame {
    private CtrlReproductor _ctrl;
    private String PLAY_ICON = "/edu/ub/prog2/MarinVegaJuan/vista/icons/play.png";
    private String PAUSE_ICON = "/edu/ub/prog2/MarinVegaJuan/vista/icons/pause.png";
    private String RANDOM_ICON = "/edu/ub/prog2/MarinVegaJuan/vista/icons/notRandom.png";
    private String NOT_RANDOM_ICON = "/edu/ub/prog2/MarinVegaJuan/vista/icons/random.png";
    private String LOOP_ICON = "/edu/ub/prog2/MarinVegaJuan/vista/icons/loop.png";
    private String NOT_LOOP_ICON = "/edu/ub/prog2/MarinVegaJuan/vista/icons/notLoop.png";
    

    /** Creates new form Reproductor4 */
    public Reproductor5() {
        FrmAfegirFitxer nouFitxer;
        _ctrl = new CtrlReproductor();
        initComponents();
        //this.setExtendedState(Reproductor4.MAXIMIZED_BOTH);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightButtonMenuLists = new javax.swing.JPopupMenu();
        reproducirListaSeleccionadaPopupButton = new javax.swing.JMenuItem();
        addLlistaACuaReproduccioPopupButton = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        novaLlistaPopupButton = new javax.swing.JMenuItem();
        eliminarLlistaPopupButton = new javax.swing.JMenuItem();
        rightButtonArxius = new javax.swing.JPopupMenu();
        reproduirArxiuDeLlistaPopupButton = new javax.swing.JMenuItem();
        addArxiuDeLlistaACua = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        rightButtonBiblioteca = new javax.swing.JPopupMenu();
        reproduirFitxerBibliotecaPopup = new javax.swing.JMenuItem();
        reproduirBibliotecaPopup = new javax.swing.JMenuItem();
        addArxiuCuaBiblioPopup = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        addFitxerBiblioPopup = new javax.swing.JMenuItem();
        eliminarArxiuPopup = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        llistaLlistesReproduccio = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        llistaArxius = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        llistaBiblioteca = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        llistaCuaReproduccio = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        previousButton = new javax.swing.JButton();
        playPauseButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        barraProgres = new javax.swing.JProgressBar();
        randomButton = new javax.swing.JToggleButton();
        ciclicButton = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JSeparator();
        stopButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadDataButton = new javax.swing.JMenuItem();
        saveDataButton = new javax.swing.JMenuItem();

        reproducirListaSeleccionadaPopupButton.setText("Reproduir llista");
        reproducirListaSeleccionadaPopupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reproducirListaSeleccionadaPopupButtonActionPerformed(evt);
            }
        });
        rightButtonMenuLists.add(reproducirListaSeleccionadaPopupButton);

        addLlistaACuaReproduccioPopupButton.setText("Afegir a cua de reproduccio");
        addLlistaACuaReproduccioPopupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLlistaACuaReproduccioPopupButtonActionPerformed(evt);
            }
        });
        rightButtonMenuLists.add(addLlistaACuaReproduccioPopupButton);
        rightButtonMenuLists.add(jSeparator3);

        novaLlistaPopupButton.setText("Nova Llista");
        novaLlistaPopupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaLlistaPopupButtonActionPerformed(evt);
            }
        });
        rightButtonMenuLists.add(novaLlistaPopupButton);

        eliminarLlistaPopupButton.setText("Eliminar llista");
        eliminarLlistaPopupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarLlistaPopupButtonActionPerformed(evt);
            }
        });
        rightButtonMenuLists.add(eliminarLlistaPopupButton);

        reproduirArxiuDeLlistaPopupButton.setText("Reproduir fitxer");
        reproduirArxiuDeLlistaPopupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reproduirArxiuDeLlistaPopupButtonActionPerformed(evt);
            }
        });
        rightButtonArxius.add(reproduirArxiuDeLlistaPopupButton);

        addArxiuDeLlistaACua.setText("Afegir a cua de reproduccio");
        addArxiuDeLlistaACua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addArxiuDeLlistaACuaActionPerformed(evt);
            }
        });
        rightButtonArxius.add(addArxiuDeLlistaACua);
        rightButtonArxius.add(jSeparator4);

        reproduirFitxerBibliotecaPopup.setText("Reproduir fitxer");
        reproduirFitxerBibliotecaPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reproduirFitxerBibliotecaPopupActionPerformed(evt);
            }
        });
        rightButtonBiblioteca.add(reproduirFitxerBibliotecaPopup);

        reproduirBibliotecaPopup.setText("Reproduir biblioteca");
        reproduirBibliotecaPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reproduirBibliotecaPopupActionPerformed(evt);
            }
        });
        rightButtonBiblioteca.add(reproduirBibliotecaPopup);

        addArxiuCuaBiblioPopup.setText("Afegir a cua de reproduccio");
        addArxiuCuaBiblioPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addArxiuCuaBiblioPopupActionPerformed(evt);
            }
        });
        rightButtonBiblioteca.add(addArxiuCuaBiblioPopup);
        rightButtonBiblioteca.add(jSeparator5);

        addFitxerBiblioPopup.setText("Nou fitxer");
        addFitxerBiblioPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFitxerBiblioPopupActionPerformed(evt);
            }
        });
        rightButtonBiblioteca.add(addFitxerBiblioPopup);

        eliminarArxiuPopup.setText("Eliminar fitxer");
        eliminarArxiuPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarArxiuPopupActionPerformed(evt);
            }
        });
        rightButtonBiblioteca.add(eliminarArxiuPopup);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ReProductor");
        setName("framePrincipal"); // NOI18N
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 546));

        jSplitPane1.setAutoscrolls(true);
        jSplitPane1.setMaximumSize(null);

        jScrollPane1.setMaximumSize(null);
        jScrollPane1.setMinimumSize(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(240, 130));

        llistaLlistesReproduccio.setComponentPopupMenu(rightButtonMenuLists);
        llistaLlistesReproduccio.setMaximumSize(null);
        llistaLlistesReproduccio.setMinimumSize(null);
        llistaLlistesReproduccio.setPreferredSize(null);
        llistaLlistesReproduccio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llistaLlistesReproduccioMouseClicked(evt);
            }
        });
        llistaLlistesReproduccio.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                llistaLlistesReproduccioValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(llistaLlistesReproduccio);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jScrollPane2.setMaximumSize(null);
        jScrollPane2.setMinimumSize(null);

        llistaArxius.setComponentPopupMenu(rightButtonArxius);
        llistaArxius.setMaximumSize(null);
        llistaArxius.setMinimumSize(null);
        llistaArxius.setPreferredSize(null);
        llistaArxius.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llistaArxiusMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(llistaArxius);

        jSplitPane1.setRightComponent(jScrollPane2);

        jTabbedPane1.addTab("Llistes de reproduccio", jSplitPane1);

        llistaBiblioteca.setComponentPopupMenu(rightButtonBiblioteca);
        llistaBiblioteca.setVisibleRowCount(10);
        llistaBiblioteca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llistaBibliotecaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(llistaBiblioteca);

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("Tw Cen MT", 1, 14));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/mas.png"))); // NOI18N
        jButton2.setToolTipText("Afegir nou arxiu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(788, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Biblioteca", jPanel3);

        llistaCuaReproduccio.setEnabled(false);
        jScrollPane4.setViewportView(llistaCuaReproduccio);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Cua de reproduccio", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleParent(jTabbedPane1);

        jPanel2.setMinimumSize(new java.awt.Dimension(0, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 72));

        previousButton.setBackground(new java.awt.Color(204, 204, 204));
        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/prev.png"))); // NOI18N
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        playPauseButton.setBackground(new java.awt.Color(204, 204, 204));
        playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/play.png"))); // NOI18N
        playPauseButton.setToolTipText("");
        playPauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playPauseButtonActionPerformed(evt);
            }
        });

        nextButton.setBackground(new java.awt.Color(204, 204, 204));
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/next.png"))); // NOI18N
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setToolTipText("");
        jSeparator1.setMinimumSize(new java.awt.Dimension(90, 10));
        jSeparator1.setOpaque(true);

        randomButton.setBackground(new java.awt.Color(204, 204, 204));
        randomButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/random.png"))); // NOI18N
        randomButton.setToolTipText("Mode aleatori");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        ciclicButton.setBackground(new java.awt.Color(204, 204, 204));
        ciclicButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/notLoop.png"))); // NOI18N
        ciclicButton.setToolTipText("Mode ciclic");
        ciclicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciclicButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        stopButton.setBackground(new java.awt.Color(204, 204, 204));
        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ub/prog2/MarinVegaJuan/vista/icons/stop.png"))); // NOI18N
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playPauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraProgres, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(randomButton)
                .addGap(18, 18, 18)
                .addComponent(ciclicButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stopButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(playPauseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barraProgres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(randomButton, javax.swing.GroupLayout.Alignment.LEADING, 0, 30, Short.MAX_VALUE)
                    .addComponent(ciclicButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        loadDataButton.setText("Load data");
        loadDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDataButtonActionPerformed(evt);
            }
        });
        jMenu1.add(loadDataButton);

        saveDataButton.setText("Save data");
        saveDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataButtonActionPerformed(evt);
            }
        });
        jMenu1.add(saveDataButton);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDataButtonActionPerformed
        //Creació del selector de fitxer
        JFileChooser seleccio = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Base de datos ReProductor .data", "data");
        seleccio.setFileFilter(filter);
        //Mostrem la finestra de dialeg
        //Resultat emmagazema una constant que indica si s’ha
        //seleccionat o no un fitxer
                int resultat = seleccio.showOpenDialog(this);
        //Assegurem que hi hagi un fitxer seleccionat
        if (resultat == JFileChooser.APPROVE_OPTION) {
            try {
                //cridem al metode per carregar les dades
                _ctrl.recuperarDades(seleccio.getSelectedFile());
                omplirLlistes();
                omplirLlistaBiblioteca();
                showRandomStateButton();
                showLoopStateButton();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loadDataButtonActionPerformed

    private void llistaLlistesReproduccioValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_llistaLlistesReproduccioValueChanged
        omplirLlistaArxius(llistaLlistesReproduccio.getSelectedIndex());
    }//GEN-LAST:event_llistaLlistesReproduccioValueChanged

    private void llistaLlistesReproduccioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llistaLlistesReproduccioMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            reproduirLlistaReproduccio(llistaLlistesReproduccio.getSelectedIndex());
            evt.consume();
        }
    }//GEN-LAST:event_llistaLlistesReproduccioMouseClicked

    private void reproducirListaSeleccionadaPopupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reproducirListaSeleccionadaPopupButtonActionPerformed
        if(llistaLlistesReproduccio.getSelectedIndex()!=-1){
            reproduirLlistaReproduccio(llistaLlistesReproduccio.getSelectedIndex());
            omplirLlistaCuaReproduccio();
        }
    }//GEN-LAST:event_reproducirListaSeleccionadaPopupButtonActionPerformed

    private void novaLlistaPopupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaLlistaPopupButtonActionPerformed
        String nomNovaLlista = JOptionPane.showInputDialog(this,
                                "Introdueix un nom per a la nova llista",
                                "Nova llista",
                                JOptionPane.INFORMATION_MESSAGE
                                );
        if(nomNovaLlista.length()!=0){
            LlistaReproduccio llista;
            llista = new LlistaReproduccio(nomNovaLlista);
            _ctrl.afegirLlistaReproduccio(llista);
            omplirLlistes();
            
        }
    }//GEN-LAST:event_novaLlistaPopupButtonActionPerformed

    private void eliminarLlistaPopupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarLlistaPopupButtonActionPerformed
       JOptionPane.showMessageDialog(this,
                                    "Ho sentim, pero el botó no esta implementat encara!",
                                    "Eliminar llista",
                                    JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_eliminarLlistaPopupButtonActionPerformed

    private void addLlistaACuaReproduccioPopupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLlistaACuaReproduccioPopupButtonActionPerformed
         if(llistaLlistesReproduccio.getSelectedIndex()!=-1){
            afegirLlistaACuaReproduccio(llistaLlistesReproduccio.getSelectedIndex());
        }
    }//GEN-LAST:event_addLlistaACuaReproduccioPopupButtonActionPerformed

    private void llistaArxiusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llistaArxiusMouseClicked
         if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            reproduirFitxerAudioLlista(llistaLlistesReproduccio.getSelectedIndex(), llistaArxius.getSelectedIndex());
            evt.consume();
        }
    }//GEN-LAST:event_llistaArxiusMouseClicked

    private void reproduirArxiuDeLlistaPopupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reproduirArxiuDeLlistaPopupButtonActionPerformed
        reproduirFitxerAudioLlista(llistaLlistesReproduccio.getSelectedIndex(), llistaArxius.getSelectedIndex());
    }//GEN-LAST:event_reproduirArxiuDeLlistaPopupButtonActionPerformed

    private void addArxiuDeLlistaACuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addArxiuDeLlistaACuaActionPerformed
       afegirFitxerAudioLlistaACua(llistaLlistesReproduccio.getSelectedIndex(), llistaArxius.getSelectedIndex());
    }//GEN-LAST:event_addArxiuDeLlistaACuaActionPerformed

    private void llistaBibliotecaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llistaBibliotecaMouseClicked
       if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            reproduirFitxerBiblio(llistaBiblioteca.getSelectedIndex());
            evt.consume();
        }
    }//GEN-LAST:event_llistaBibliotecaMouseClicked

    private void reproduirBibliotecaPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reproduirBibliotecaPopupActionPerformed
        reproduirTotaLaBiblioteca();
    }//GEN-LAST:event_reproduirBibliotecaPopupActionPerformed

    private void reproduirFitxerBibliotecaPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reproduirFitxerBibliotecaPopupActionPerformed
       reproduirFitxerBiblio( llistaBiblioteca.getSelectedIndex());
    }//GEN-LAST:event_reproduirFitxerBibliotecaPopupActionPerformed

    private void addArxiuCuaBiblioPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addArxiuCuaBiblioPopupActionPerformed
        afegirFitxerACua( llistaBiblioteca.getSelectedIndex());
    }//GEN-LAST:event_addArxiuCuaBiblioPopupActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        _ctrl.pararReproduccio();
        showPlayButton();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void playPauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playPauseButtonActionPerformed
        _ctrl.pushPlayPause();
        if(_ctrl.reproductorActiu()){
            showPauseButton();
        }else{
            showPlayButton();
        }
            
    }//GEN-LAST:event_playPauseButtonActionPerformed

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        _ctrl.premerReproduccioAleatoria();
        showRandomStateButton();
    }//GEN-LAST:event_randomButtonActionPerformed

    private void ciclicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciclicButtonActionPerformed
        _ctrl.premerReproduccioCiclica();
        showLoopStateButton();
    }//GEN-LAST:event_ciclicButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        reproduirFitxerSeguent();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        reproduirFitxerAnterior();
    }//GEN-LAST:event_previousButtonActionPerformed

    private void eliminarArxiuPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarArxiuPopupActionPerformed
        eliminarFitxer(llistaBiblioteca.getSelectedIndices());
    }//GEN-LAST:event_eliminarArxiuPopupActionPerformed

    private void addFitxerBiblioPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFitxerBiblioPopupActionPerformed
       metodeAfegirArxiu();
       
    }//GEN-LAST:event_addFitxerBiblioPopupActionPerformed

    private void saveDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataButtonActionPerformed
        //Creació del selector de fitxer
        JFileChooser seleccio = new JFileChooser();
        //Mostrem la finestra de dialeg
        //Resultat emmagazema una constant que indica si s’ha
        //seleccionat o no un fitxer
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Base de datos ReProductor .data", "data");
        seleccio.setFileFilter(filter);
         int resultat = seleccio.showSaveDialog(this);
        //Assegurem que hi hagi un fitxer seleccionat
        if (resultat == JFileChooser.APPROVE_OPTION) {
            try {
                //cridem al metode per carregar les dades
                _ctrl.desarDades(seleccio.getSelectedFile());
                omplirLlistes();
                omplirLlistaBiblioteca();
                showRandomStateButton();
                showLoopStateButton();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
  
    }//GEN-LAST:event_saveDataButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        metodeAfegirArxiu();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
            //UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Reproductor5.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Reproductor5().setVisible(true);
                
            }
        });
    }
     void omplirLlistes(){
        llistaLlistesReproduccio.clearSelection();
        llistaLlistesReproduccio.setModel(_ctrl.getNomLlistes());
        
    }
    void omplirLlistaArxius(int numLlista){
        llistaArxius.clearSelection();
        if(llistaLlistesReproduccio.getSelectedIndex()==-1)llistaLlistesReproduccio.setSelectedIndex(0);
        llistaArxius.setModel(_ctrl.getDescripcioArxius(numLlista+1));
    }
    void omplirLlistaBiblioteca(){
        llistaBiblioteca.clearSelection();
        llistaBiblioteca.setModel(_ctrl.getArxiusBibliteca());
    }
    void omplirLlistaCuaReproduccio(){
        llistaCuaReproduccio.clearSelection();
        llistaCuaReproduccio.setModel(_ctrl.getArxiusCuaReproduccio());
    }
    private boolean reproduirLlistaReproduccio(int numLlista) {
        try {
            _ctrl.reproduirUnaLlista(numLlista+1);
            omplirLlistaCuaReproduccio();
            showPauseButton();
                        
        } catch (Exception e) {
            return false;
        }
        return true;
   }
    private boolean reproduirFitxerAudioLlista(int numLlista, int numFitxer){
         try {
            _ctrl.reproduirArxiuDunaLlista(numFitxer+1, numLlista+1);
            omplirLlistaCuaReproduccio();
            showPauseButton();
        } catch (Exception e) {
            return false;
        }
        return true;
        
    }
    private boolean afegirFitxerAudioLlistaACua(int numLlista, int numFitxer){
         try {
            _ctrl.afegirNouFitxerDeLlistaCuaReproduccio(numFitxer+1, numLlista+1);
            omplirLlistaCuaReproduccio();
                        
        } catch (Exception e) {
            return false;
        }
        return true;
        
    }
    private boolean afegirLlistaACuaReproduccio(int numLlista){
         try {
            _ctrl.afegirNovaLlistaCuaReproduccio(numLlista+1);
            omplirLlistaCuaReproduccio();
                        
        } catch (Exception e) {
            return false;
        }
        return true;
        
    }
    private boolean reproduirFitxerBiblio(int numFitxer){
        try {
            _ctrl.reproduirUnFitxer(numFitxer+1);
            omplirLlistaCuaReproduccio();
            showPauseButton();
                        
        } catch (Exception e) {
            return false;
        }
        return true;
        
    }
    private boolean afegirFitxerACua(int numFitxer){
        try {
            _ctrl.afegirNouFitxerCuaReproduccio(numFitxer+1);
            omplirLlistaCuaReproduccio();
                        
        } catch (Exception e) {
            return false;
        }
        return true;
        
    }
     private boolean reproduirTotaLaBiblioteca(){
        try {
            _ctrl.reproduirLaBiblioteca();
            omplirLlistaCuaReproduccio();
            showPauseButton();
                        
        } catch (Exception e) {
            return false;
        }
        return true;
        
    }
     void showPauseButton(){
          playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(PAUSE_ICON)));
     }
     void showPlayButton(){
         playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(PLAY_ICON)));
     }
     void showRandomStateButton(){
         if(_ctrl.isRandom()){
            randomButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(RANDOM_ICON)));
            randomButton.setSelected(true);
            omplirLlistaCuaReproduccio();
        }else{
            randomButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(NOT_RANDOM_ICON)));
            randomButton.setSelected(false);
        }
     }
     void showLoopStateButton(){
         if(_ctrl.isLoop()){
            ciclicButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(LOOP_ICON)));
            ciclicButton.setSelected(true);
        }else{
            ciclicButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(NOT_LOOP_ICON)));
            ciclicButton.setSelected(false);
        }
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addArxiuCuaBiblioPopup;
    private javax.swing.JMenuItem addArxiuDeLlistaACua;
    private javax.swing.JMenuItem addFitxerBiblioPopup;
    private javax.swing.JMenuItem addLlistaACuaReproduccioPopupButton;
    private javax.swing.JProgressBar barraProgres;
    private javax.swing.JToggleButton ciclicButton;
    private javax.swing.JMenuItem eliminarArxiuPopup;
    private javax.swing.JMenuItem eliminarLlistaPopupButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList llistaArxius;
    private javax.swing.JList llistaBiblioteca;
    private javax.swing.JList llistaCuaReproduccio;
    private javax.swing.JList llistaLlistesReproduccio;
    private javax.swing.JMenuItem loadDataButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JMenuItem novaLlistaPopupButton;
    private javax.swing.JButton playPauseButton;
    private javax.swing.JButton previousButton;
    private javax.swing.JToggleButton randomButton;
    private javax.swing.JMenuItem reproducirListaSeleccionadaPopupButton;
    private javax.swing.JMenuItem reproduirArxiuDeLlistaPopupButton;
    private javax.swing.JMenuItem reproduirBibliotecaPopup;
    private javax.swing.JMenuItem reproduirFitxerBibliotecaPopup;
    private javax.swing.JPopupMenu rightButtonArxius;
    private javax.swing.JPopupMenu rightButtonBiblioteca;
    private javax.swing.JPopupMenu rightButtonMenuLists;
    private javax.swing.JMenuItem saveDataButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Funcio per reproduir el fitxer seguent
     */
    private void reproduirFitxerSeguent() {
        _ctrl.reproduirSeguent();
        if(_ctrl.reproductorActiu()){
            showPauseButton();
        }else{
            showPlayButton();
        }
    }
     /**
     * Funcio per reproduir el fitxer anterior
     */
    private void reproduirFitxerAnterior() {
        _ctrl.reproduirAnterior();
        if(_ctrl.reproductorActiu()){
            showPauseButton();
        }else{
            showPlayButton();
        }
    }
     /**
     * Funcio que elimina el fitxer desitjat
     * @param sc
     */
    public void eliminarFitxer(int[] llistat) {
        // Hem de sumar un a cada index ja que 
        // a la funcio original per eliminar elements
        // els index comencen per 1
        for(int i = 0; i<llistat.length; i++){
            llistat[i]+=1;
        }
        _ctrl.eliminarFitxerBiblioteca(llistat);
        omplirLlistaBiblioteca();
        omplirLlistaArxius(llistaLlistesReproduccio.getSelectedIndex());
    }

    private void metodeAfegirArxiu() {
         FrmAfegirFitxer nouFitxer = new FrmAfegirFitxer(this,true);
       nouFitxer.setVisible(true);
       FitxerAudio tmp = nouFitxer.getNouFitxer();
       if(tmp instanceof FitxerAudio){
            try{
                _ctrl.afegirFitxerBiblioteca(tmp);
                omplirLlistaBiblioteca();
            }catch(Exception e){
                
            }
       }
    }
}
